version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: agi_os_postgres
    environment:
      POSTGRES_USER: agi_user
      POSTGRES_PASSWORD: agi_password
      POSTGRES_DB: agi_os
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infrastructure/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U agi_user"]
      interval: 10s
      timeout: 5s
      retries: 5

  # RabbitMQ Message Queue
  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    container_name: agi_os_rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"   # AMQP
      - "15672:15672" # Management UI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: agi_os_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ClickHouse Analytics Database (optional, can use PostgreSQL initially)
  # clickhouse:
  #   image: clickhouse/clickhouse-server:latest
  #   container_name: agi_os_clickhouse
  #   ports:
  #     - "9000:9000"
  #     - "8123:8123"
  #   volumes:
  #     - clickhouse_data:/var/lib/clickhouse
  #   environment:
  #     CLICKHOUSE_USER: default
  #     CLICKHOUSE_PASSWORD: clickhouse_password

volumes:
  postgres_data:
  rabbitmq_data:
  redis_data:
  # clickhouse_data:

networks:
  default:
    name: agi_os_network

